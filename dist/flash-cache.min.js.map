{"version":3,"sources":["flash-cache.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_listeners","_events","_events2","_addToExpiryQueue","_addToExpiryQueue2","_defaultConfig","defaultExpiryIn","config","arguments","length","undefined","_cache","Object","create","_expiryFn","key","data","emit","FC_EXPIRY","remove","put","value","expiryIn","__cache__","time","Date","now","expiryAt","bind","FC_ADD","get","nCache","assign","FC_GET","isExpired","deleteTimerAtKey","FC_REMOVE","expired","getConfig","getAll","FC_GET_ALL","clearAll","FC_CLEAR","on","off","defineProperty","type","listener","push","splice","indexOf","map","handler","Events","isExisty","val","_timers","_expiryTimerInstance","_cleanUpTimers","k","hasOwnProperty","_checkExpired","keys","remainingExpiries","isTimerActive","setInterval","clearInterval","expiryFn"],"mappings":"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","file":"flash-cache.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flashCache\"] = factory();\n\telse\n\t\troot[\"flashCache\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _listeners = __webpack_require__(1);\n\t\n\tvar _events = __webpack_require__(2);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _addToExpiryQueue = __webpack_require__(3);\n\t\n\tvar _addToExpiryQueue2 = _interopRequireDefault(_addToExpiryQueue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _defaultConfig = {\n\t    // Default cache expiry time, 60000ms(60s) by default\n\t    // Set `false` to disable expiry(This beats the purpose of cache)\n\t    // `0` will be treated as `false`\n\t    defaultExpiryIn: 60000\n\t};\n\t\n\t/**\n\t * flash-cache: Ultra fast in-memory cache\n\t */\n\t/**\n\t * Created by Ganapati on 5/14/17\n\t *\n\t * flash-cache: Ultra fast in-memory cache\n\t */\n\t\n\tmodule.exports = function flashCache() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultConfig;\n\t\n\t    var _cache = Object.create(null);\n\t\n\t    return {\n\t        /**\n\t         * Remove value from cache and trigger expiry event\n\t         *\n\t         * Exposing here to prevent creation of multiple function instances\n\t         * */\n\t        _expiryFn: function _expiryFn(key, data) {\n\t            // Trigger `FC_EXPIRY` event\n\t            this.emit(_events2.default.FC_EXPIRY, { key: key, data: data });\n\t\n\t            this.remove(key, true);\n\t        },\n\t\n\t\n\t        /**\n\t         * Put data into cache\n\t         *\n\t         * @param {String} key  Cache key\n\t         * @param {String|Object} value Value to be stored against cache key\n\t         * @param {Number} expiryIn Expiry time for the key, defaults to defaultExpiryIn\n\t         * */\n\t        put: function put() {\n\t            var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t            var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t            var expiryIn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.defaultExpiryIn;\n\t\n\t            // Remove existing values in the key, if any\n\t            if (_cache[key]) {\n\t                this.remove(key, true);\n\t            }\n\t\n\t            var __cache__ = {\n\t                value: value,\n\t                time: Date.now()\n\t            };\n\t\n\t            __cache__.value = value;\n\t\n\t            // Ignore all falsy values(like `0` & `false`)\n\t            // Basically if there is no expiry, cache will act as simple in-memory data store\n\t            if (expiryIn) {\n\t                // Store timeout, might be required for later use\n\t                __cache__.expiryAt = __cache__.time + expiryIn;\n\t            }\n\t\n\t            _cache[key] = __cache__;\n\t\n\t            // If expiry time exists, add to expiry queue\n\t            if (__cache__.expiryAt) {\n\t                // Remove the cache after expiry time\n\t                (0, _addToExpiryQueue2.default)(__cache__.expiryAt, key, this._expiryFn.bind(this, key, _cache[key]));\n\t            }\n\t\n\t            // Trigger `FC_ADD` event\n\t            this.emit(_events2.default.FC_ADD, { key: key, data: _cache[key] });\n\t\n\t            return _cache[key];\n\t        },\n\t\n\t\n\t        /**\n\t         * Get data from cache\n\t         *\n\t         * @param {String} key  Cache key\n\t         * */\n\t        get: function get() {\n\t            var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\n\t            var __cache__ = _cache[key];\n\t\n\t            if (__cache__) {\n\t                // Make a new copy of cache\n\t                // Note: this won't remove nested references\n\t                var nCache = Object.assign({}, __cache__);\n\t\n\t                // Trigger `FC_GET` event\n\t                this.emit(_events2.default.FC_GET, { key: key, data: nCache });\n\t\n\t                return nCache;\n\t            }\n\t\n\t            return null;\n\t        },\n\t\n\t\n\t        /**\n\t         * Remove data/Invalidate from cache\n\t         *\n\t         * @param {String} key  Cache key to be removed\n\t         * @param {Boolean} isExpired  Boolean to indicate whether cache is removed by expiry timeout\n\t         * */\n\t        remove: function remove(key) {\n\t            var isExpired = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t            var __cache__ = _cache[key];\n\t\n\t            if (__cache__) {\n\t                var expiryAt = __cache__.expiryAt;\n\t\n\t                // If timer exists for the key, remove it\n\t\n\t                (0, _addToExpiryQueue.deleteTimerAtKey)(expiryAt, key);\n\t\n\t                // Remove key & value from cache\n\t                delete _cache[key];\n\t\n\t                // Trigger `FC_REMOVE` event\n\t                this.emit(_events2.default.FC_REMOVE, { key: key, expired: isExpired });\n\t\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t\n\t        /**\n\t         * Get current cache configuration\n\t         * */\n\t        getConfig: function getConfig() {\n\t            return Object.assign({}, config);\n\t        },\n\t\n\t\n\t        /**\n\t         * Get entire cache\n\t         * */\n\t        getAll: function getAll() {\n\t            // Trigger `FC_GET_ALL` event\n\t            this.emit(_events2.default.FC_GET_ALL, _cache);\n\t\n\t            return _cache;\n\t        },\n\t\n\t\n\t        /**\n\t         * Clear entire cache\n\t         * */\n\t        clearAll: function clearAll() {\n\t            _cache = Object.create(null);\n\t\n\t            // Trigger `FC_CLEAR` event\n\t            this.emit(_events2.default.FC_CLEAR, {});\n\t\n\t            return true;\n\t        },\n\t\n\t\n\t        /**\n\t         * Event listeners\n\t         * */\n\t        on: _listeners.on,\n\t        off: _listeners.off,\n\t        emit: _listeners.emit\n\t    };\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Created by Ganapati on 6/24/17\n\t *\n\t * Event listeners\n\t */\n\t\n\tvar _listeners = Object.create(null);\n\t\n\t/**\n\t * Add cache event listener\n\t * Snippet borrowed from @developit/mitt\n\t *\n\t * @param {String} type  Event to register, Eg: add, remove, expiry\n\t * @param {String|Object} listener Function to be called on event\n\t * */\n\tvar on = exports.on = function on(type, listener) {\n\t    if (typeof listener === 'function') {\n\t        (_listeners[type] || (_listeners[type] = [])).push(listener);\n\t    }\n\t};\n\t\n\t/**\n\t * Remove cache event listener\n\t * Snippet borrowed from @developit/mitt\n\t *\n\t * @param {String} type  Event to un register, Eg: add, remove, expiry\n\t * @param {String|Object} listener function to remove\n\t * */\n\tvar off = exports.off = function off(type, listener) {\n\t    if (_listeners[type]) {\n\t        _listeners[type].splice(_listeners[type].indexOf(listener) >>> 0, 1);\n\t    }\n\t};\n\t\n\t/**\n\t * Emit data to cache event listeners\n\t * Snippet borrowed from @developit/mitt\n\t *\n\t * @param {String} type  Event to be emited\n\t * @param {String|Object} data to pass to listener function\n\t * */\n\tvar emit = exports.emit = function emit(type, data) {\n\t    (_listeners[type] || []).map(function (handler) {\n\t        handler(data);\n\t    });\n\t    (_listeners['*'] || []).map(function (handler) {\n\t        handler(type, data);\n\t    });\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Created by guns on 13/07/17.\n\t *\n\t * All events triggered\n\t */\n\t\n\tvar Events = {\n\t    FC_EXPIRY: 'fc-expiry',\n\t    FC_ADD: 'fc-add',\n\t    FC_GET: 'fc-get',\n\t    FC_GET_ALL: 'fc-get-all',\n\t    FC_REMOVE: 'fc-remove',\n\t    FC_CLEAR: 'fc-clear'\n\t};\n\t\n\texports.default = Events;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Created by Ganapati on 7/05/17\n\t *\n\t * Timers - Expire cache on time(on regular intervals)\n\t */\n\t\n\t/**\n\t * Check if variable has some value\n\t * */\n\tvar isExisty = function isExisty(val) {\n\t    return val !== null && val !== undefined;\n\t};\n\t\n\t/**\n\t * Store each key's expiry functions in _timers[expiryAt][key]\n\t * */\n\tvar _timers = {};\n\tvar _expiryTimerInstance = null;\n\t\n\t/**\n\t * Expire all keys at time(key) - _timers[time] & remove key from _timers\n\t * */\n\tvar _cleanUpTimers = function _cleanUpTimers(key) {\n\t    if (_timers[key]) {\n\t        for (var k in _timers[key]) {\n\t            if (_timers[key].hasOwnProperty(k)) {\n\t                _timers[key][k]();\n\t            }\n\t        }\n\t        delete _timers[key];\n\t    }\n\t};\n\t\n\t/**\n\t * Check for keys expiry each 1 millisecond unless all keys are expired\n\t *\n\t * Cleanup current + old keys(If any)\n\t *\n\t * If no keys exists to expire, stop timer or if timer is not started, attach timer\n\t * */\n\tvar _checkExpired = function _checkExpired() {\n\t    var keys = Object.keys(_timers);\n\t    var remainingExpiries = keys.length;\n\t    var now = Date.now();\n\t    var isTimerActive = isExisty(_expiryTimerInstance);\n\t\n\t    keys.map(function (k) {\n\t        if (k <= now) {\n\t            _cleanUpTimers(k);\n\t            remainingExpiries -= 1;\n\t        }\n\t    });\n\t\n\t    if (!remainingExpiries) {\n\t        clearInterval(_expiryTimerInstance);\n\t        _expiryTimerInstance = null;\n\t    } else if (!isTimerActive) {\n\t        _expiryTimerInstance = setInterval(_checkExpired, 1);\n\t    }\n\t};\n\t\n\t/**\n\t * Add expiryFn to _timers[expiryAt][key] & start timer if timer not attached\n\t * */\n\tvar _addToExpiryQueue = function _addToExpiryQueue(expiryAt, key, expiryFn) {\n\t    if (!_timers[expiryAt]) {\n\t        _timers[expiryAt] = {};\n\t    }\n\t    _timers[expiryAt][key] = expiryFn;\n\t    _checkExpired();\n\t};\n\t\n\tvar deleteTimerAtKey = exports.deleteTimerAtKey = function deleteTimerAtKey(expiryAt, key) {\n\t    if (_timers[expiryAt][key]) {\n\t        delete _timers[expiryAt][key];\n\t    }\n\t};\n\t\n\texports.default = _addToExpiryQueue;\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}