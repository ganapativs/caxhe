{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 55653de83dd864186f6c","webpack:///./src/flash-cache.js","webpack:///./src/LZW.js","webpack:///./src/listeners.js","webpack:///./src/util.js"],"names":["_defaultConfig","expireIn","compressStrings","module","exports","flashCache","config","_cache","Object","create","_config","assign","put","key","value","remove","__cache__","time","Date","now","_compressed","compress","expiryAt","_expirer","setTimeout","emit","data","get","cache","decompress","isExpired","clearTimeout","expired","getAll","clearAll","on","off","uncompressed","i","dictionary","c","wc","w","result","dictSize","String","fromCharCode","length","charAt","hasOwnProperty","push","compressed","k","entry","_listeners","type","listener","splice","indexOf","map","handler","isExisty","val","undefined"],"mappings":"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","file":"flash-cache.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flashCache\"] = factory();\n\telse\n\t\troot[\"flashCache\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55653de83dd864186f6c\n **/","/**\n * Created by Ganapati on 5/14/17.\n *\n * flash-cache: Ultra fast in-memory cache.\n */\n\nimport LZW from './LZW';\nimport {on, off, emit} from './listeners';\nimport {isExisty} from './util';\n\nlet _defaultConfig = {\n    // Cache expiry time, 60000ms(60s) by default\n    // Set `false` to disable expiry(This beats the purpose of cache).\n    // `0` will be treated as `false`.\n    expireIn: 60000,\n    // Should compress the data if data is string, will save some bytes, but more processing!\n    compressStrings: true\n};\n\n/**\n * flash-cache: Ultra fast in-memory cache.\n */\nmodule.exports = function flashCache(config = _defaultConfig) {\n    let _cache = Object.create(null);\n\n    return {\n        /**\n         * Expose config copy for future use\n         * */\n        _config: Object.assign({}, config),\n\n        /**\n         * Put data into cache\n         *\n         * @param {String} key  Cache key\n         * @param {String|Object} value Value to be stored against cache key\n         * */\n        put(key = '', value = '') {\n            // Remove existing values, if any\n            if (_cache[key]) {\n                this.remove(key, true);\n            }\n\n            let __cache__ = {\n                value,\n                time: Date.now()\n            };\n            let {compressStrings, expireIn} = config;\n\n            // Compress and store strings\n            if (compressStrings && typeof value === 'string') {\n                __cache__._compressed = true;\n                __cache__.value = LZW.compress(value);\n            }\n\n            // Ignore all falsy values(like `0` & `false`)\n            // Basically if there is no expiry, cache will act as simple in-memory data store.\n            if (expireIn) {\n                // Store timeout, might be required for later use\n                __cache__.expiryAt = __cache__.time + expireIn;\n\n                // Remove the cache after expiry time\n                __cache__._expirer = setTimeout(() => {\n                    // Trigger `fc-expiry` event\n                    this.emit('fc-expiry', {key, data: _cache[key]});\n\n                    this.remove(key, true);\n                }, expireIn);\n            }\n\n            _cache[key] = __cache__;\n\n            // Trigger `fc-add` event\n            this.emit('fc-add', {key, data: _cache[key]});\n\n            return _cache[key];\n        },\n\n        /**\n         * Get data from cache\n         *\n         * @param {String} key  Cache key\n         * */\n        get(key = '') {\n            let __cache__ = _cache[key];\n\n            if (__cache__) {\n                // Extract private _compressed, _expirer function\n                let {_expirer, _compressed, ...cache} = __cache__;\n\n                // Make copy of cache\n                cache = Object.assign({}, cache);\n\n                // If data is compressed string, uncompress\n                if (_compressed) {\n                    cache.value = LZW.decompress(cache.value);\n                }\n\n                // Trigger `fc-get` event\n                this.emit('fc-get', {key, data: cache});\n\n                return cache;\n            }\n\n            return null;\n        },\n\n        /**\n         * Remove data/Invalidate from cache\n         *\n         * @param {String} key  Cache key to be removed\n         * @param {Boolean} isExpired  Boolean to indicate whether cache is removed by expiry timeout\n         * */\n        remove(key, isExpired = false) {\n            let __cache__ = _cache[key];\n\n            if (__cache__) {\n                let {_expirer} = __cache__;\n\n                // If expirer exists, clear it\n                if (isExisty(_expirer)) {\n                    clearTimeout(_expirer);\n                }\n\n                // Remove key & value from cache\n                delete _cache[key];\n\n                // Trigger `fc-remove` event\n                this.emit('fc-remove', {key, expired: isExpired});\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Get entire cache\n         * */\n        getAll() {\n            // Trigger `fc-get-all` event\n            this.emit('fc-get-all', _cache);\n\n            return _cache;\n        },\n\n        /**\n         * Clear entire cache\n         * */\n        clearAll() {\n            _cache = Object.create(null);\n\n            // Trigger `fc-clear` event\n            this.emit('fc-clear', {});\n\n            return true;\n        },\n\n        /**\n         * Event listeners\n         * */\n        on,\n        off,\n        emit\n    }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/flash-cache.js\n **/","/**\n * Lempel-Ziv-Welch (LZW) Compression/Decompression algorithm for Strings\n * http://rosettacode.org/wiki/LZW_compression#JavaScript\n *\n * let str = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n * Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n * when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n * It has survived not only five centuries, but also the leap into electronic typesetting,\n * remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset\n * sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like\n * Aldus PageMaker including versions of Lorem Ipsum.\";\n *\n * console.log(str.length) // 574\n *\n * let compressed = LZW.compress(str) // 358\n *\n * let uncompressed = LZW.decompress(str) // 574\n */\n\nexport default {\n    compress (uncompressed) {\n        \"use strict\";\n        // Build the dictionary.\n        let i,\n            dictionary = {},\n            c,\n            wc,\n            w = \"\",\n            result = [],\n            dictSize = 256;\n        for (i = 0; i < 256; i += 1) {\n            dictionary[String.fromCharCode(i)] = i;\n        }\n\n        for (i = 0; i < uncompressed.length; i += 1) {\n            c = uncompressed.charAt(i);\n            wc = w + c;\n            // Do not use dictionary[wc] because javascript arrays\n            // will return values for array['pop'], array['push'] etc\n            // if (dictionary[wc]) {\n            if (dictionary.hasOwnProperty(wc)) {\n                w = wc;\n            } else {\n                result.push(dictionary[w]);\n                // Add wc to the dictionary.\n                dictionary[wc] = dictSize++;\n                w = String(c);\n            }\n        }\n\n        // Output the code for w.\n        if (w !== \"\") {\n            result.push(dictionary[w]);\n        }\n        return result;\n    },\n\n\n    decompress (compressed) {\n        \"use strict\";\n        // Build the dictionary.\n        let i,\n            dictionary = [],\n            w,\n            result,\n            k,\n            entry = \"\",\n            dictSize = 256;\n        for (i = 0; i < 256; i += 1) {\n            dictionary[i] = String.fromCharCode(i);\n        }\n\n        w = String.fromCharCode(compressed[0]);\n        result = w;\n        for (i = 1; i < compressed.length; i += 1) {\n            k = compressed[i];\n            if (dictionary[k]) {\n                entry = dictionary[k];\n            } else {\n                if (k === dictSize) {\n                    entry = w + w.charAt(0);\n                } else {\n                    return null;\n                }\n            }\n\n            result += entry;\n\n            // Add w+entry[0] to the dictionary.\n            dictionary[dictSize++] = w + entry.charAt(0);\n\n            w = entry;\n        }\n        return result;\n    }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/LZW.js\n **/","/**\n * Created by Ganapati on 6/24/17.\n *\n * Event listeners\n */\n\nlet _listeners = Object.create(null);\n\n/**\n * Add cache event listener\n * Snippet borrowed from @developit/mitt\n *\n * @param {String} type  Event to register, Eg: add, remove, expiry\n * @param {String|Object} listener Function to be called on event\n * */\nlet on = (type, listener) => {\n    if (typeof listener === 'function') {\n        (_listeners[type] || (_listeners[type] = [])).push(listener);\n    }\n};\n\n/**\n * Remove cache event listener\n * Snippet borrowed from @developit/mitt\n *\n * @param {String} type  Event to un register, Eg: add, remove, expiry\n * @param {String|Object} listener function to remove\n * */\nlet off = (type, listener) => {\n    if (_listeners[type]) {\n        _listeners[type].splice(_listeners[type].indexOf(listener) >>> 0, 1);\n    }\n};\n\n/**\n * Emit data to cache event listeners\n * Snippet borrowed from @developit/mitt\n *\n * @param {String} type  Event to be emited\n * @param {String|Object} data to pass to listener function\n * */\nlet emit = (type, data) => {\n    (_listeners[type] || []).map((handler) => {\n        handler(data);\n    });\n    (_listeners['*'] || []).map((handler) => {\n        handler(type, data);\n    });\n};\n\nexport default {on, off, emit};\n\n\n/** WEBPACK FOOTER **\n ** ./src/listeners.js\n **/","/**\n * Created by Ganapati on 5/14/17.\n */\n\n/**\n * Check if variable has some value\n * */\nexport let isExisty = (val) => val !== null && val !== undefined;\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/"],"sourceRoot":""}